# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class NeuralNetFeatures(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, month: int=None, year: int=None, team: int=None, prev_game_points: int=None, prev_game_field_goal_perc: float=None, prev_game_free_throw_perc: float=None, prev_game_three_throw_perc: float=None, prev_game_assists: int=None, prev_game_rebounds: int=None, is_home_team: int=None, tweet_sentiment: int=None, did_tweet: int=None, won_last_game: int=None):  # noqa: E501
        """NeuralNetFeatures - a model defined in Swagger

        :param month: The month of this NeuralNetFeatures.  # noqa: E501
        :type month: int
        :param year: The year of this NeuralNetFeatures.  # noqa: E501
        :type year: int
        :param team: The team of this NeuralNetFeatures.  # noqa: E501
        :type team: int
        :param prev_game_points: The prev_game_points of this NeuralNetFeatures.  # noqa: E501
        :type prev_game_points: int
        :param prev_game_field_goal_perc: The prev_game_field_goal_perc of this NeuralNetFeatures.  # noqa: E501
        :type prev_game_field_goal_perc: float
        :param prev_game_free_throw_perc: The prev_game_free_throw_perc of this NeuralNetFeatures.  # noqa: E501
        :type prev_game_free_throw_perc: float
        :param prev_game_three_throw_perc: The prev_game_three_throw_perc of this NeuralNetFeatures.  # noqa: E501
        :type prev_game_three_throw_perc: float
        :param prev_game_assists: The prev_game_assists of this NeuralNetFeatures.  # noqa: E501
        :type prev_game_assists: int
        :param prev_game_rebounds: The prev_game_rebounds of this NeuralNetFeatures.  # noqa: E501
        :type prev_game_rebounds: int
        :param is_home_team: The is_home_team of this NeuralNetFeatures.  # noqa: E501
        :type is_home_team: int
        :param tweet_sentiment: The tweet_sentiment of this NeuralNetFeatures.  # noqa: E501
        :type tweet_sentiment: int
        :param did_tweet: The did_tweet of this NeuralNetFeatures.  # noqa: E501
        :type did_tweet: int
        :param won_last_game: The won_last_game of this NeuralNetFeatures.  # noqa: E501
        :type won_last_game: int
        """
        self.swagger_types = {
            'month': int,
            'year': int,
            'team': int,
            'prev_game_points': int,
            'prev_game_field_goal_perc': float,
            'prev_game_free_throw_perc': float,
            'prev_game_three_throw_perc': float,
            'prev_game_assists': int,
            'prev_game_rebounds': int,
            'is_home_team': int,
            'tweet_sentiment': int,
            'did_tweet': int,
            'won_last_game': int
        }

        self.attribute_map = {
            'month': 'month',
            'year': 'year',
            'team': 'team',
            'prev_game_points': 'prev_game_points',
            'prev_game_field_goal_perc': 'prev_game_field_goal_perc',
            'prev_game_free_throw_perc': 'prev_game_free_throw_perc',
            'prev_game_three_throw_perc': 'prev_game_three_throw_perc',
            'prev_game_assists': 'prev_game_assists',
            'prev_game_rebounds': 'prev_game_rebounds',
            'is_home_team': 'is_home_team',
            'tweet_sentiment': 'tweet_sentiment',
            'did_tweet': 'did_tweet',
            'won_last_game': 'won_last_game'
        }

        self._month = month
        self._year = year
        self._team = team
        self._prev_game_points = prev_game_points
        self._prev_game_field_goal_perc = prev_game_field_goal_perc
        self._prev_game_free_throw_perc = prev_game_free_throw_perc
        self._prev_game_three_throw_perc = prev_game_three_throw_perc
        self._prev_game_assists = prev_game_assists
        self._prev_game_rebounds = prev_game_rebounds
        self._is_home_team = is_home_team
        self._tweet_sentiment = tweet_sentiment
        self._did_tweet = did_tweet
        self._won_last_game = won_last_game

    @classmethod
    def from_dict(cls, dikt) -> 'NeuralNetFeatures':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NeuralNetFeatures of this NeuralNetFeatures.  # noqa: E501
        :rtype: NeuralNetFeatures
        """
        return util.deserialize_model(dikt, cls)

    @property
    def month(self) -> int:
        """Gets the month of this NeuralNetFeatures.


        :return: The month of this NeuralNetFeatures.
        :rtype: int
        """
        return self._month

    @month.setter
    def month(self, month: int):
        """Sets the month of this NeuralNetFeatures.


        :param month: The month of this NeuralNetFeatures.
        :type month: int
        """

        self._month = month

    @property
    def year(self) -> int:
        """Gets the year of this NeuralNetFeatures.


        :return: The year of this NeuralNetFeatures.
        :rtype: int
        """
        return self._year

    @year.setter
    def year(self, year: int):
        """Sets the year of this NeuralNetFeatures.


        :param year: The year of this NeuralNetFeatures.
        :type year: int
        """

        self._year = year

    @property
    def team(self) -> int:
        """Gets the team of this NeuralNetFeatures.


        :return: The team of this NeuralNetFeatures.
        :rtype: int
        """
        return self._team

    @team.setter
    def team(self, team: int):
        """Sets the team of this NeuralNetFeatures.


        :param team: The team of this NeuralNetFeatures.
        :type team: int
        """

        self._team = team

    @property
    def prev_game_points(self) -> int:
        """Gets the prev_game_points of this NeuralNetFeatures.


        :return: The prev_game_points of this NeuralNetFeatures.
        :rtype: int
        """
        return self._prev_game_points

    @prev_game_points.setter
    def prev_game_points(self, prev_game_points: int):
        """Sets the prev_game_points of this NeuralNetFeatures.


        :param prev_game_points: The prev_game_points of this NeuralNetFeatures.
        :type prev_game_points: int
        """

        self._prev_game_points = prev_game_points

    @property
    def prev_game_field_goal_perc(self) -> float:
        """Gets the prev_game_field_goal_perc of this NeuralNetFeatures.


        :return: The prev_game_field_goal_perc of this NeuralNetFeatures.
        :rtype: float
        """
        return self._prev_game_field_goal_perc

    @prev_game_field_goal_perc.setter
    def prev_game_field_goal_perc(self, prev_game_field_goal_perc: float):
        """Sets the prev_game_field_goal_perc of this NeuralNetFeatures.


        :param prev_game_field_goal_perc: The prev_game_field_goal_perc of this NeuralNetFeatures.
        :type prev_game_field_goal_perc: float
        """

        self._prev_game_field_goal_perc = prev_game_field_goal_perc

    @property
    def prev_game_free_throw_perc(self) -> float:
        """Gets the prev_game_free_throw_perc of this NeuralNetFeatures.


        :return: The prev_game_free_throw_perc of this NeuralNetFeatures.
        :rtype: float
        """
        return self._prev_game_free_throw_perc

    @prev_game_free_throw_perc.setter
    def prev_game_free_throw_perc(self, prev_game_free_throw_perc: float):
        """Sets the prev_game_free_throw_perc of this NeuralNetFeatures.


        :param prev_game_free_throw_perc: The prev_game_free_throw_perc of this NeuralNetFeatures.
        :type prev_game_free_throw_perc: float
        """

        self._prev_game_free_throw_perc = prev_game_free_throw_perc

    @property
    def prev_game_three_throw_perc(self) -> float:
        """Gets the prev_game_three_throw_perc of this NeuralNetFeatures.


        :return: The prev_game_three_throw_perc of this NeuralNetFeatures.
        :rtype: float
        """
        return self._prev_game_three_throw_perc

    @prev_game_three_throw_perc.setter
    def prev_game_three_throw_perc(self, prev_game_three_throw_perc: float):
        """Sets the prev_game_three_throw_perc of this NeuralNetFeatures.


        :param prev_game_three_throw_perc: The prev_game_three_throw_perc of this NeuralNetFeatures.
        :type prev_game_three_throw_perc: float
        """

        self._prev_game_three_throw_perc = prev_game_three_throw_perc

    @property
    def prev_game_assists(self) -> int:
        """Gets the prev_game_assists of this NeuralNetFeatures.


        :return: The prev_game_assists of this NeuralNetFeatures.
        :rtype: int
        """
        return self._prev_game_assists

    @prev_game_assists.setter
    def prev_game_assists(self, prev_game_assists: int):
        """Sets the prev_game_assists of this NeuralNetFeatures.


        :param prev_game_assists: The prev_game_assists of this NeuralNetFeatures.
        :type prev_game_assists: int
        """

        self._prev_game_assists = prev_game_assists

    @property
    def prev_game_rebounds(self) -> int:
        """Gets the prev_game_rebounds of this NeuralNetFeatures.


        :return: The prev_game_rebounds of this NeuralNetFeatures.
        :rtype: int
        """
        return self._prev_game_rebounds

    @prev_game_rebounds.setter
    def prev_game_rebounds(self, prev_game_rebounds: int):
        """Sets the prev_game_rebounds of this NeuralNetFeatures.


        :param prev_game_rebounds: The prev_game_rebounds of this NeuralNetFeatures.
        :type prev_game_rebounds: int
        """

        self._prev_game_rebounds = prev_game_rebounds

    @property
    def is_home_team(self) -> int:
        """Gets the is_home_team of this NeuralNetFeatures.


        :return: The is_home_team of this NeuralNetFeatures.
        :rtype: int
        """
        return self._is_home_team

    @is_home_team.setter
    def is_home_team(self, is_home_team: int):
        """Sets the is_home_team of this NeuralNetFeatures.


        :param is_home_team: The is_home_team of this NeuralNetFeatures.
        :type is_home_team: int
        """

        self._is_home_team = is_home_team

    @property
    def tweet_sentiment(self) -> int:
        """Gets the tweet_sentiment of this NeuralNetFeatures.


        :return: The tweet_sentiment of this NeuralNetFeatures.
        :rtype: int
        """
        return self._tweet_sentiment

    @tweet_sentiment.setter
    def tweet_sentiment(self, tweet_sentiment: int):
        """Sets the tweet_sentiment of this NeuralNetFeatures.


        :param tweet_sentiment: The tweet_sentiment of this NeuralNetFeatures.
        :type tweet_sentiment: int
        """

        self._tweet_sentiment = tweet_sentiment

    @property
    def did_tweet(self) -> int:
        """Gets the did_tweet of this NeuralNetFeatures.


        :return: The did_tweet of this NeuralNetFeatures.
        :rtype: int
        """
        return self._did_tweet

    @did_tweet.setter
    def did_tweet(self, did_tweet: int):
        """Sets the did_tweet of this NeuralNetFeatures.


        :param did_tweet: The did_tweet of this NeuralNetFeatures.
        :type did_tweet: int
        """

        self._did_tweet = did_tweet

    @property
    def won_last_game(self) -> int:
        """Gets the won_last_game of this NeuralNetFeatures.


        :return: The won_last_game of this NeuralNetFeatures.
        :rtype: int
        """
        return self._won_last_game

    @won_last_game.setter
    def won_last_game(self, won_last_game: int):
        """Sets the won_last_game of this NeuralNetFeatures.


        :param won_last_game: The won_last_game of this NeuralNetFeatures.
        :type won_last_game: int
        """

        self._won_last_game = won_last_game
