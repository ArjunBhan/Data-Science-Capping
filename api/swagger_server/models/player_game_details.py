# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class PlayerGameDetails(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, game_id: int=None, player_id: int=None, team_id: int=None, start_position: str=None, did_not_play: bool=None, did_not_dress: bool=None, not_with_team: bool=None, seconds_played: int=None, field_goals_made: int=None, field_goals_attempted: int=None, three_pointers_made: int=None, three_pointers_attempted: int=None, free_throws_made: int=None, free_throws_attempted: int=None, offensive_rebounds: int=None, defensive_rebounds: int=None, assists: int=None, steals: int=None, blocked_shots: int=None, turnovers: int=None, personal_fouls: int=None, points: int=None, plus_minus: int=None, is_top_scorer: bool=None):  # noqa: E501
        """PlayerGameDetails - a model defined in Swagger

        :param game_id: The game_id of this PlayerGameDetails.  # noqa: E501
        :type game_id: int
        :param player_id: The player_id of this PlayerGameDetails.  # noqa: E501
        :type player_id: int
        :param team_id: The team_id of this PlayerGameDetails.  # noqa: E501
        :type team_id: int
        :param start_position: The start_position of this PlayerGameDetails.  # noqa: E501
        :type start_position: str
        :param did_not_play: The did_not_play of this PlayerGameDetails.  # noqa: E501
        :type did_not_play: bool
        :param did_not_dress: The did_not_dress of this PlayerGameDetails.  # noqa: E501
        :type did_not_dress: bool
        :param not_with_team: The not_with_team of this PlayerGameDetails.  # noqa: E501
        :type not_with_team: bool
        :param seconds_played: The seconds_played of this PlayerGameDetails.  # noqa: E501
        :type seconds_played: int
        :param field_goals_made: The field_goals_made of this PlayerGameDetails.  # noqa: E501
        :type field_goals_made: int
        :param field_goals_attempted: The field_goals_attempted of this PlayerGameDetails.  # noqa: E501
        :type field_goals_attempted: int
        :param three_pointers_made: The three_pointers_made of this PlayerGameDetails.  # noqa: E501
        :type three_pointers_made: int
        :param three_pointers_attempted: The three_pointers_attempted of this PlayerGameDetails.  # noqa: E501
        :type three_pointers_attempted: int
        :param free_throws_made: The free_throws_made of this PlayerGameDetails.  # noqa: E501
        :type free_throws_made: int
        :param free_throws_attempted: The free_throws_attempted of this PlayerGameDetails.  # noqa: E501
        :type free_throws_attempted: int
        :param offensive_rebounds: The offensive_rebounds of this PlayerGameDetails.  # noqa: E501
        :type offensive_rebounds: int
        :param defensive_rebounds: The defensive_rebounds of this PlayerGameDetails.  # noqa: E501
        :type defensive_rebounds: int
        :param assists: The assists of this PlayerGameDetails.  # noqa: E501
        :type assists: int
        :param steals: The steals of this PlayerGameDetails.  # noqa: E501
        :type steals: int
        :param blocked_shots: The blocked_shots of this PlayerGameDetails.  # noqa: E501
        :type blocked_shots: int
        :param turnovers: The turnovers of this PlayerGameDetails.  # noqa: E501
        :type turnovers: int
        :param personal_fouls: The personal_fouls of this PlayerGameDetails.  # noqa: E501
        :type personal_fouls: int
        :param points: The points of this PlayerGameDetails.  # noqa: E501
        :type points: int
        :param plus_minus: The plus_minus of this PlayerGameDetails.  # noqa: E501
        :type plus_minus: int
        :param is_top_scorer: The is_top_scorer of this PlayerGameDetails.  # noqa: E501
        :type is_top_scorer: bool
        """
        self.swagger_types = {
            'game_id': int,
            'player_id': int,
            'team_id': int,
            'start_position': str,
            'did_not_play': bool,
            'did_not_dress': bool,
            'not_with_team': bool,
            'seconds_played': int,
            'field_goals_made': int,
            'field_goals_attempted': int,
            'three_pointers_made': int,
            'three_pointers_attempted': int,
            'free_throws_made': int,
            'free_throws_attempted': int,
            'offensive_rebounds': int,
            'defensive_rebounds': int,
            'assists': int,
            'steals': int,
            'blocked_shots': int,
            'turnovers': int,
            'personal_fouls': int,
            'points': int,
            'plus_minus': int,
            'is_top_scorer': bool
        }

        self.attribute_map = {
            'game_id': 'game_id',
            'player_id': 'player_id',
            'team_id': 'team_id',
            'start_position': 'start_position',
            'did_not_play': 'did_not_play',
            'did_not_dress': 'did_not_dress',
            'not_with_team': 'not_with_team',
            'seconds_played': 'seconds_played',
            'field_goals_made': 'field_goals_made',
            'field_goals_attempted': 'field_goals_attempted',
            'three_pointers_made': 'three_pointers_made',
            'three_pointers_attempted': 'three_pointers_attempted',
            'free_throws_made': 'free_throws_made',
            'free_throws_attempted': 'free_throws_attempted',
            'offensive_rebounds': 'offensive_rebounds',
            'defensive_rebounds': 'defensive_rebounds',
            'assists': 'assists',
            'steals': 'steals',
            'blocked_shots': 'blocked_shots',
            'turnovers': 'turnovers',
            'personal_fouls': 'personal_fouls',
            'points': 'points',
            'plus_minus': 'plus_minus',
            'is_top_scorer': 'is_top_scorer'
        }

        self._game_id = game_id
        self._player_id = player_id
        self._team_id = team_id
        self._start_position = start_position
        self._did_not_play = did_not_play
        self._did_not_dress = did_not_dress
        self._not_with_team = not_with_team
        self._seconds_played = seconds_played
        self._field_goals_made = field_goals_made
        self._field_goals_attempted = field_goals_attempted
        self._three_pointers_made = three_pointers_made
        self._three_pointers_attempted = three_pointers_attempted
        self._free_throws_made = free_throws_made
        self._free_throws_attempted = free_throws_attempted
        self._offensive_rebounds = offensive_rebounds
        self._defensive_rebounds = defensive_rebounds
        self._assists = assists
        self._steals = steals
        self._blocked_shots = blocked_shots
        self._turnovers = turnovers
        self._personal_fouls = personal_fouls
        self._points = points
        self._plus_minus = plus_minus
        self._is_top_scorer = is_top_scorer

    @classmethod
    def from_dict(cls, dikt) -> 'PlayerGameDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PlayerGameDetails of this PlayerGameDetails.  # noqa: E501
        :rtype: PlayerGameDetails
        """
        return util.deserialize_model(dikt, cls)

    @property
    def game_id(self) -> int:
        """Gets the game_id of this PlayerGameDetails.


        :return: The game_id of this PlayerGameDetails.
        :rtype: int
        """
        return self._game_id

    @game_id.setter
    def game_id(self, game_id: int):
        """Sets the game_id of this PlayerGameDetails.


        :param game_id: The game_id of this PlayerGameDetails.
        :type game_id: int
        """

        self._game_id = game_id

    @property
    def player_id(self) -> int:
        """Gets the player_id of this PlayerGameDetails.


        :return: The player_id of this PlayerGameDetails.
        :rtype: int
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id: int):
        """Sets the player_id of this PlayerGameDetails.


        :param player_id: The player_id of this PlayerGameDetails.
        :type player_id: int
        """

        self._player_id = player_id

    @property
    def team_id(self) -> int:
        """Gets the team_id of this PlayerGameDetails.


        :return: The team_id of this PlayerGameDetails.
        :rtype: int
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id: int):
        """Sets the team_id of this PlayerGameDetails.


        :param team_id: The team_id of this PlayerGameDetails.
        :type team_id: int
        """

        self._team_id = team_id

    @property
    def start_position(self) -> str:
        """Gets the start_position of this PlayerGameDetails.


        :return: The start_position of this PlayerGameDetails.
        :rtype: str
        """
        return self._start_position

    @start_position.setter
    def start_position(self, start_position: str):
        """Sets the start_position of this PlayerGameDetails.


        :param start_position: The start_position of this PlayerGameDetails.
        :type start_position: str
        """

        self._start_position = start_position

    @property
    def did_not_play(self) -> bool:
        """Gets the did_not_play of this PlayerGameDetails.


        :return: The did_not_play of this PlayerGameDetails.
        :rtype: bool
        """
        return self._did_not_play

    @did_not_play.setter
    def did_not_play(self, did_not_play: bool):
        """Sets the did_not_play of this PlayerGameDetails.


        :param did_not_play: The did_not_play of this PlayerGameDetails.
        :type did_not_play: bool
        """

        self._did_not_play = did_not_play

    @property
    def did_not_dress(self) -> bool:
        """Gets the did_not_dress of this PlayerGameDetails.


        :return: The did_not_dress of this PlayerGameDetails.
        :rtype: bool
        """
        return self._did_not_dress

    @did_not_dress.setter
    def did_not_dress(self, did_not_dress: bool):
        """Sets the did_not_dress of this PlayerGameDetails.


        :param did_not_dress: The did_not_dress of this PlayerGameDetails.
        :type did_not_dress: bool
        """

        self._did_not_dress = did_not_dress

    @property
    def not_with_team(self) -> bool:
        """Gets the not_with_team of this PlayerGameDetails.


        :return: The not_with_team of this PlayerGameDetails.
        :rtype: bool
        """
        return self._not_with_team

    @not_with_team.setter
    def not_with_team(self, not_with_team: bool):
        """Sets the not_with_team of this PlayerGameDetails.


        :param not_with_team: The not_with_team of this PlayerGameDetails.
        :type not_with_team: bool
        """

        self._not_with_team = not_with_team

    @property
    def seconds_played(self) -> int:
        """Gets the seconds_played of this PlayerGameDetails.


        :return: The seconds_played of this PlayerGameDetails.
        :rtype: int
        """
        return self._seconds_played

    @seconds_played.setter
    def seconds_played(self, seconds_played: int):
        """Sets the seconds_played of this PlayerGameDetails.


        :param seconds_played: The seconds_played of this PlayerGameDetails.
        :type seconds_played: int
        """

        self._seconds_played = seconds_played

    @property
    def field_goals_made(self) -> int:
        """Gets the field_goals_made of this PlayerGameDetails.


        :return: The field_goals_made of this PlayerGameDetails.
        :rtype: int
        """
        return self._field_goals_made

    @field_goals_made.setter
    def field_goals_made(self, field_goals_made: int):
        """Sets the field_goals_made of this PlayerGameDetails.


        :param field_goals_made: The field_goals_made of this PlayerGameDetails.
        :type field_goals_made: int
        """

        self._field_goals_made = field_goals_made

    @property
    def field_goals_attempted(self) -> int:
        """Gets the field_goals_attempted of this PlayerGameDetails.


        :return: The field_goals_attempted of this PlayerGameDetails.
        :rtype: int
        """
        return self._field_goals_attempted

    @field_goals_attempted.setter
    def field_goals_attempted(self, field_goals_attempted: int):
        """Sets the field_goals_attempted of this PlayerGameDetails.


        :param field_goals_attempted: The field_goals_attempted of this PlayerGameDetails.
        :type field_goals_attempted: int
        """

        self._field_goals_attempted = field_goals_attempted

    @property
    def three_pointers_made(self) -> int:
        """Gets the three_pointers_made of this PlayerGameDetails.


        :return: The three_pointers_made of this PlayerGameDetails.
        :rtype: int
        """
        return self._three_pointers_made

    @three_pointers_made.setter
    def three_pointers_made(self, three_pointers_made: int):
        """Sets the three_pointers_made of this PlayerGameDetails.


        :param three_pointers_made: The three_pointers_made of this PlayerGameDetails.
        :type three_pointers_made: int
        """

        self._three_pointers_made = three_pointers_made

    @property
    def three_pointers_attempted(self) -> int:
        """Gets the three_pointers_attempted of this PlayerGameDetails.


        :return: The three_pointers_attempted of this PlayerGameDetails.
        :rtype: int
        """
        return self._three_pointers_attempted

    @three_pointers_attempted.setter
    def three_pointers_attempted(self, three_pointers_attempted: int):
        """Sets the three_pointers_attempted of this PlayerGameDetails.


        :param three_pointers_attempted: The three_pointers_attempted of this PlayerGameDetails.
        :type three_pointers_attempted: int
        """

        self._three_pointers_attempted = three_pointers_attempted

    @property
    def free_throws_made(self) -> int:
        """Gets the free_throws_made of this PlayerGameDetails.


        :return: The free_throws_made of this PlayerGameDetails.
        :rtype: int
        """
        return self._free_throws_made

    @free_throws_made.setter
    def free_throws_made(self, free_throws_made: int):
        """Sets the free_throws_made of this PlayerGameDetails.


        :param free_throws_made: The free_throws_made of this PlayerGameDetails.
        :type free_throws_made: int
        """

        self._free_throws_made = free_throws_made

    @property
    def free_throws_attempted(self) -> int:
        """Gets the free_throws_attempted of this PlayerGameDetails.


        :return: The free_throws_attempted of this PlayerGameDetails.
        :rtype: int
        """
        return self._free_throws_attempted

    @free_throws_attempted.setter
    def free_throws_attempted(self, free_throws_attempted: int):
        """Sets the free_throws_attempted of this PlayerGameDetails.


        :param free_throws_attempted: The free_throws_attempted of this PlayerGameDetails.
        :type free_throws_attempted: int
        """

        self._free_throws_attempted = free_throws_attempted

    @property
    def offensive_rebounds(self) -> int:
        """Gets the offensive_rebounds of this PlayerGameDetails.


        :return: The offensive_rebounds of this PlayerGameDetails.
        :rtype: int
        """
        return self._offensive_rebounds

    @offensive_rebounds.setter
    def offensive_rebounds(self, offensive_rebounds: int):
        """Sets the offensive_rebounds of this PlayerGameDetails.


        :param offensive_rebounds: The offensive_rebounds of this PlayerGameDetails.
        :type offensive_rebounds: int
        """

        self._offensive_rebounds = offensive_rebounds

    @property
    def defensive_rebounds(self) -> int:
        """Gets the defensive_rebounds of this PlayerGameDetails.


        :return: The defensive_rebounds of this PlayerGameDetails.
        :rtype: int
        """
        return self._defensive_rebounds

    @defensive_rebounds.setter
    def defensive_rebounds(self, defensive_rebounds: int):
        """Sets the defensive_rebounds of this PlayerGameDetails.


        :param defensive_rebounds: The defensive_rebounds of this PlayerGameDetails.
        :type defensive_rebounds: int
        """

        self._defensive_rebounds = defensive_rebounds

    @property
    def assists(self) -> int:
        """Gets the assists of this PlayerGameDetails.


        :return: The assists of this PlayerGameDetails.
        :rtype: int
        """
        return self._assists

    @assists.setter
    def assists(self, assists: int):
        """Sets the assists of this PlayerGameDetails.


        :param assists: The assists of this PlayerGameDetails.
        :type assists: int
        """

        self._assists = assists

    @property
    def steals(self) -> int:
        """Gets the steals of this PlayerGameDetails.


        :return: The steals of this PlayerGameDetails.
        :rtype: int
        """
        return self._steals

    @steals.setter
    def steals(self, steals: int):
        """Sets the steals of this PlayerGameDetails.


        :param steals: The steals of this PlayerGameDetails.
        :type steals: int
        """

        self._steals = steals

    @property
    def blocked_shots(self) -> int:
        """Gets the blocked_shots of this PlayerGameDetails.


        :return: The blocked_shots of this PlayerGameDetails.
        :rtype: int
        """
        return self._blocked_shots

    @blocked_shots.setter
    def blocked_shots(self, blocked_shots: int):
        """Sets the blocked_shots of this PlayerGameDetails.


        :param blocked_shots: The blocked_shots of this PlayerGameDetails.
        :type blocked_shots: int
        """

        self._blocked_shots = blocked_shots

    @property
    def turnovers(self) -> int:
        """Gets the turnovers of this PlayerGameDetails.


        :return: The turnovers of this PlayerGameDetails.
        :rtype: int
        """
        return self._turnovers

    @turnovers.setter
    def turnovers(self, turnovers: int):
        """Sets the turnovers of this PlayerGameDetails.


        :param turnovers: The turnovers of this PlayerGameDetails.
        :type turnovers: int
        """

        self._turnovers = turnovers

    @property
    def personal_fouls(self) -> int:
        """Gets the personal_fouls of this PlayerGameDetails.


        :return: The personal_fouls of this PlayerGameDetails.
        :rtype: int
        """
        return self._personal_fouls

    @personal_fouls.setter
    def personal_fouls(self, personal_fouls: int):
        """Sets the personal_fouls of this PlayerGameDetails.


        :param personal_fouls: The personal_fouls of this PlayerGameDetails.
        :type personal_fouls: int
        """

        self._personal_fouls = personal_fouls

    @property
    def points(self) -> int:
        """Gets the points of this PlayerGameDetails.


        :return: The points of this PlayerGameDetails.
        :rtype: int
        """
        return self._points

    @points.setter
    def points(self, points: int):
        """Sets the points of this PlayerGameDetails.


        :param points: The points of this PlayerGameDetails.
        :type points: int
        """

        self._points = points

    @property
    def plus_minus(self) -> int:
        """Gets the plus_minus of this PlayerGameDetails.


        :return: The plus_minus of this PlayerGameDetails.
        :rtype: int
        """
        return self._plus_minus

    @plus_minus.setter
    def plus_minus(self, plus_minus: int):
        """Sets the plus_minus of this PlayerGameDetails.


        :param plus_minus: The plus_minus of this PlayerGameDetails.
        :type plus_minus: int
        """

        self._plus_minus = plus_minus

    @property
    def is_top_scorer(self) -> bool:
        """Gets the is_top_scorer of this PlayerGameDetails.


        :return: The is_top_scorer of this PlayerGameDetails.
        :rtype: bool
        """
        return self._is_top_scorer

    @is_top_scorer.setter
    def is_top_scorer(self, is_top_scorer: bool):
        """Sets the is_top_scorer of this PlayerGameDetails.


        :param is_top_scorer: The is_top_scorer of this PlayerGameDetails.
        :type is_top_scorer: bool
        """

        self._is_top_scorer = is_top_scorer
