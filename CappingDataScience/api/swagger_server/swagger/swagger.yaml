---
swagger: "2.0"
info:
  description: "This is documentation for the globetrotters DATA 477 capping group's\
    \ API."
  version: "1.0.0"
  title: "NBA API"
  contact:
    email: "nicholas.blaskey1@marist.edu"
  license:
    name: "MIT"
    url: "https://mit-license.org/"
host: "127.0.0.1"
basePath: "/api"
tags:
- name: "team"
  description: "Everything about NBA teams"
- name: "player"
  description: "Everything about NBA players"
- name: "ranking"
  description: "Everything about NBA rankings"
- name: "game"
  description: "About NBA games"
- name: "player_game_details"
  description: "How players did in NBA games"
- name: "model"
  description: "Usage of models trained on the NBA data"
- name: "meta"
  description: "metadata about the NBA data."
schemes:
- "https"
- "http"
paths:
  /team:
    get:
      tags:
      - "team"
      summary: "Get all teams"
      description: ""
      operationId: "team_get"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Sucess"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Team"
      x-swagger-router-controller: "swagger_server.controllers.team_controller"
  /team/{teamID}:
    get:
      tags:
      - "team"
      summary: "Get team by ID"
      description: "Returns a single team"
      operationId: "team_team_idget"
      produces:
      - "application/json"
      parameters:
      - name: "teamID"
        in: "path"
        description: "ID of team to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Sucess"
          schema:
            $ref: "#/definitions/Team"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Team not found"
      x-swagger-router-controller: "swagger_server.controllers.team_controller"
  /player:
    get:
      tags:
      - "player"
      summary: "Get all players"
      description: ""
      operationId: "player_get"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Sucess"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Player"
      x-swagger-router-controller: "swagger_server.controllers.player_controller"
  /player/{playerID}:
    get:
      tags:
      - "player"
      summary: "Get player by ID"
      description: "Returns all rows associated with playerID"
      operationId: "player_player_idget"
      produces:
      - "application/json"
      parameters:
      - name: "playerID"
        in: "path"
        description: "ID of player to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Sucess (note a single player id can return multiple rows due\
            \ to trades and seasons)"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Player"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Player not found"
      x-swagger-router-controller: "swagger_server.controllers.player_controller"
  /player/team/{teamID}:
    get:
      tags:
      - "player"
      summary: "Get all players on a team"
      description: "Returns all players on the provided team"
      operationId: "player_team_team_idget"
      produces:
      - "application/json"
      parameters:
      - name: "teamID"
        in: "path"
        description: "ID of the team which to get all players on"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Sucess"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Player"
        "400":
          description: "Invalid ID supplied"
      x-swagger-router-controller: "swagger_server.controllers.player_controller"
  /player/season/{season}:
    get:
      tags:
      - "player"
      summary: "Get all players in a season"
      description: "Returns all players in a season"
      operationId: "player_season_season_get"
      produces:
      - "application/json"
      parameters:
      - name: "season"
        in: "path"
        description: "year of the season of all players to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Sucess"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Player"
        "400":
          description: "Invalid season supplied"
      x-swagger-router-controller: "swagger_server.controllers.player_controller"
  /player/name/{playerName}:
    get:
      tags:
      - "player"
      summary: "Get player by player name"
      description: "Returns all rows matching the player name"
      operationId: "player_name_player_name_get"
      produces:
      - "application/json"
      parameters:
      - name: "playerName"
        in: "path"
        description: "Name of the player to return (first last)"
        required: true
        type: "string"
      responses:
        "200":
          description: "Sucess"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Player"
        "404":
          description: "Player not found"
      x-swagger-router-controller: "swagger_server.controllers.player_controller"
  /seasonStats/{playerID}/{season}:
    get:
      tags:
      - "player"
      summary: "Get season statistics of a player and season"
      description: "Returns statistics of a player for a given season"
      operationId: "season_stats_player_id_season_get"
      produces:
      - "application/json"
      parameters:
      - name: "playerID"
        in: "path"
        description: "ID of player to return statistics for"
        required: true
        type: "integer"
        format: "int64"
      - name: "season"
        in: "path"
        description: "season (year) to consider statistics for"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Sucess"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/SeasonStatistics"
        "400":
          description: "Invalid player id or season supplied"
        "404":
          description: "Player not found"
      x-swagger-router-controller: "swagger_server.controllers.player_controller"
  /ranking:
    get:
      tags:
      - "ranking"
      summary: "Get all team rankings"
      description: ""
      operationId: "ranking_get"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Sucess"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Ranking"
      x-swagger-router-controller: "swagger_server.controllers.ranking_controller"
  /ranking/{rankingID}:
    get:
      tags:
      - "ranking"
      summary: "Get ranking by ID"
      description: "Return ranking associated with ID"
      operationId: "ranking_ranking_idget"
      produces:
      - "application/json"
      parameters:
      - name: "rankingID"
        in: "path"
        description: "ID of ranking to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Sucess"
          schema:
            $ref: "#/definitions/Ranking"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Ranking not found"
      x-swagger-router-controller: "swagger_server.controllers.ranking_controller"
  /ranking/team/{teamID}:
    get:
      tags:
      - "ranking"
      summary: "Get all rankings for a team"
      description: "Return all rankings associated with a team ID"
      operationId: "ranking_team_team_idget"
      produces:
      - "application/json"
      parameters:
      - name: "teamID"
        in: "path"
        description: "ID of  the team to get all rankings for"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Sucess"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Ranking"
        "400":
          description: "Invalid ID supplied"
      x-swagger-router-controller: "swagger_server.controllers.ranking_controller"
  /ranking/{fromDate}/{toDate}:
    get:
      tags:
      - "ranking"
      summary: "Get all rankings for a date range"
      description: "Return all rankings in a given date range"
      operationId: "ranking_from_date_to_date_get"
      produces:
      - "application/json"
      parameters:
      - name: "fromDate"
        in: "path"
        description: "Starting date range for rankings to get"
        required: true
        type: "string"
        format: "date-time"
      - name: "toDate"
        in: "path"
        description: "Ending date range for rankings to get"
        required: true
        type: "string"
        format: "date-time"
      responses:
        "200":
          description: "Sucess"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Ranking"
        "400":
          description: "Invalid date range supplied"
      x-swagger-router-controller: "swagger_server.controllers.ranking_controller"
  /game:
    get:
      tags:
      - "game"
      summary: "Get all games"
      description: ""
      operationId: "game_get"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Sucess"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Game"
      x-swagger-router-controller: "swagger_server.controllers.game_controller"
  /game/{gameID}:
    get:
      tags:
      - "game"
      summary: "Get game by ID"
      description: "Return game associated with ID"
      operationId: "game_game_idget"
      produces:
      - "application/json"
      parameters:
      - name: "gameID"
        in: "path"
        description: "ID of game to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Sucess"
          schema:
            $ref: "#/definitions/Game"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Game not found"
      x-swagger-router-controller: "swagger_server.controllers.game_controller"
  /game/team/{teamID}:
    get:
      tags:
      - "game"
      summary: "Get all games from a given team"
      description: "Return games associated with a team"
      operationId: "game_team_team_idget"
      produces:
      - "application/json"
      parameters:
      - name: "teamID"
        in: "path"
        description: "ID of the team for all games to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Sucess"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Game"
        "400":
          description: "Invalid ID supplied"
      x-swagger-router-controller: "swagger_server.controllers.game_controller"
  /game/{fromDate}/{toDate}:
    get:
      tags:
      - "game"
      summary: "Get all games in a date range"
      description: "Return games in a date range"
      operationId: "game_from_date_to_date_get"
      produces:
      - "application/json"
      parameters:
      - name: "fromDate"
        in: "path"
        description: "Starting date range for games to get"
        required: true
        type: "string"
        format: "date-time"
      - name: "toDate"
        in: "path"
        description: "Ending date range for games to get"
        required: true
        type: "string"
        format: "date-time"
      responses:
        "200":
          description: "Sucess"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Game"
        "400":
          description: "Invalid ID supplied"
      x-swagger-router-controller: "swagger_server.controllers.game_controller"
  /player_game_details:
    get:
      tags:
      - "player_game_details"
      summary: "Get all player game details"
      description: ""
      operationId: "player_game_details_get"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Sucess"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PlayerGameDetails"
      x-swagger-router-controller: "swagger_server.controllers.player_game_details_controller"
  /player_game_details/game/{gameID}:
    get:
      tags:
      - "player_game_details"
      summary: "Get all player game details for a given game"
      description: "Return all player's game details for a given game"
      operationId: "player_game_details_game_game_idget"
      produces:
      - "application/json"
      parameters:
      - name: "gameID"
        in: "path"
        description: "ID of the game for which to return all details for"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Sucess"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PlayerGameDetails"
        "400":
          description: "Invalid ID supplied"
      x-swagger-router-controller: "swagger_server.controllers.player_game_details_controller"
  /player_game_details/player/{playerID}:
    get:
      tags:
      - "player_game_details"
      summary: "Get all player game details for a given player"
      description: "Return all player's game details for a given player"
      operationId: "player_game_details_player_player_idget"
      produces:
      - "application/json"
      parameters:
      - name: "playerID"
        in: "path"
        description: "ID of the player for which to return all details for"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Sucess"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PlayerGameDetails"
        "400":
          description: "Invalid ID supplied"
      x-swagger-router-controller: "swagger_server.controllers.player_game_details_controller"
  /player_game_details/{gameID}/{playerID}:
    get:
      tags:
      - "player_game_details"
      summary: "Get player game details for a given player and a given game"
      description: "Return player game details for a given game and a given player"
      operationId: "player_game_details_game_id_player_idget"
      produces:
      - "application/json"
      parameters:
      - name: "gameID"
        in: "path"
        description: "ID of the game"
        required: true
        type: "integer"
        format: "int64"
      - name: "playerID"
        in: "path"
        description: "ID of the player"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Sucess"
          schema:
            $ref: "#/definitions/PlayerGameDetails"
        "400":
          description: "Invalid ID supplied for either gameID or playerID"
        "404":
          description: "Player game details not found"
      x-swagger-router-controller: "swagger_server.controllers.player_game_details_controller"
  /model/clustering:
    post:
      tags:
      - "model"
      summary: "Cluster a set of players"
      description: "Returns cluster IDs for the provided players"
      operationId: "model_clustering_post"
      parameters:
      - in: "body"
        name: "body"
        description: "Player ids to cluster"
        required: true
        schema:
          $ref: "#/definitions/ClusterInput"
      responses:
        "200":
          description: "Sucess"
          schema:
            $ref: "#/definitions/ClusterOutput"
        "400":
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.model_controller"
  /model/reinforcement:
    post:
      tags:
      - "model"
      summary: "Run a betting bot starting at a date"
      description: "Runs our betting bot based on input"
      operationId: "model_reinforcement_post"
      parameters:
      - in: "body"
        name: "body"
        description: "Input to configure the betting bot"
        required: true
        schema:
          $ref: "#/definitions/BettingBotInput"
      responses:
        "200":
          description: "Sucess"
          schema:
            $ref: "#/definitions/BettingBotOutput"
        "400":
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.model_controller"
  /model/neuralNetwork:
    post:
      tags:
      - "model"
      summary: "Runs a prediction on a given game using a possible supplied tweet."
      description: "Gives the chance of team winning from the first game at the date\
        \ supplied. Also provides features the nerual network is using to predict."
      operationId: "model_neural_network_post"
      parameters:
      - in: "body"
        name: "body"
        description: "Input to the neural network"
        required: true
        schema:
          $ref: "#/definitions/NerualNetInput"
      responses:
        "200":
          description: "Sucess"
          schema:
            $ref: "#/definitions/NerualNetOutput"
        "400":
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.model_controller"
  /model/ensemble:
    post:
      tags:
      - "model"
      summary: "Runs a prediction on a number of games using an ensemble approach."
      description: "Utilizes an ensemble approach using both the reinforcement and\
        \ the neural network."
      operationId: "model_ensemble_post"
      parameters:
      - in: "body"
        name: "body"
        description: "Input for the ensemble model."
        required: true
        schema:
          $ref: "#/definitions/EnsembleInput"
      responses:
        "200":
          description: "Sucess"
          schema:
            $ref: "#/definitions/EnsembleOutput"
        "400":
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.model_controller"
  /meta/tables:
    get:
      tags:
      - "meta"
      summary: "Get all of the table names"
      description: ""
      operationId: "meta_tables_get"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Sucess"
          schema:
            type: "array"
            items:
              type: "string"
      x-swagger-router-controller: "swagger_server.controllers.meta_controller"
  /meta/nulls/{tableName}:
    get:
      tags:
      - "meta"
      summary: "Get all a count of nulls in a table"
      description: "Returns the amount of nulls and row count for a table"
      operationId: "meta_nulls_table_name_get"
      produces:
      - "application/json"
      parameters:
      - name: "tableName"
        in: "path"
        description: "table name to get information for"
        required: true
        type: "string"
      responses:
        "200":
          description: "Sucess"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/NullResult"
        "400":
          description: "Invalid table supplied"
      x-swagger-router-controller: "swagger_server.controllers.meta_controller"
definitions:
  Team:
    type: "object"
    properties:
      team_id:
        type: "integer"
        format: "int64"
      min_year_in_nba_champ:
        type: "integer"
        format: "int64"
      max_year_in_nba_champ:
        type: "integer"
        format: "int64"
      abbreviation:
        type: "string"
      nickname:
        type: "string"
      year_founded:
        type: "integer"
        format: "int64"
      city:
        type: "string"
      arena_name:
        type: "string"
      arena_capacity:
        type: "integer"
        format: "int64"
      owner:
        type: "string"
      manager:
        type: "string"
      head_coach:
        type: "string"
      players_been_on_team:
        type: "integer"
        format: "int64"
    example:
      owner: "owner"
      head_coach: "head_coach"
      manager: "manager"
      city: "city"
      arena_name: "arena_name"
      year_founded: 5
      team_id: 0
      abbreviation: "abbreviation"
      max_year_in_nba_champ: 1
      nickname: "nickname"
      min_year_in_nba_champ: 6
      arena_capacity: 5
      players_been_on_team: 2
  Player:
    type: "object"
    properties:
      player_auto_key:
        type: "integer"
        format: "int64"
      player_id:
        type: "integer"
        format: "int64"
      player_name:
        type: "string"
      height:
        type: "integer"
        format: "int64"
      weight:
        type: "integer"
        format: "int64"
      season:
        type: "integer"
        format: "int64"
      college:
        type: "string"
      age:
        type: "integer"
        format: "int64"
      country:
        type: "string"
      draft_year:
        type: "integer"
        format: "int64"
      draft_round:
        type: "integer"
        format: "int64"
      draft_number:
        type: "integer"
        format: "int64"
      team_id:
        type: "integer"
        format: "int64"
      season_range:
        type: "integer"
        format: "int64"
    example:
      college: "college"
      country: "country"
      draft_number: 3
      draft_year: 7
      weight: 5
      draft_round: 9
      player_auto_key: 0
      team_id: 2
      player_id: 6
      season: 5
      player_name: "player_name"
      season_range: 4
      age: 2
      height: 1
  Ranking:
    type: "object"
    properties:
      ranking_id:
        type: "integer"
        format: "int64"
      team_id:
        type: "integer"
        format: "int64"
      standings_date:
        type: "string"
        format: "date-time"
      conference:
        type: "string"
      games_played_season:
        type: "integer"
        format: "int64"
      winning_games_season:
        type: "integer"
        format: "int64"
      losing_games_seasons:
        type: "integer"
        format: "int64"
      home_record_wins:
        type: "integer"
        format: "int64"
      home_record_loses:
        type: "integer"
        format: "int64"
      away_record_wins:
        type: "integer"
        format: "int64"
      away_record_loses:
        type: "integer"
        format: "int64"
      improved_since_last:
        type: "boolean"
    example:
      conference: "conference"
      away_record_loses: 3
      games_played_season: 1
      standings_date: "2000-01-23T04:56:07.000+00:00"
      improved_since_last: true
      winning_games_season: 5
      losing_games_seasons: 5
      team_id: 6
      away_record_wins: 9
      ranking_id: 0
      home_record_loses: 7
      home_record_wins: 2
  Game:
    type: "object"
    properties:
      game_id:
        type: "integer"
        format: "int64"
      game_date:
        type: "string"
        format: "date-time"
      home_team_id:
        type: "integer"
        format: "int64"
      away_team_id:
        type: "integer"
        format: "int64"
      season:
        type: "integer"
        format: "int64"
      home_team_won:
        type: "boolean"
      home_first:
        type: "integer"
        format: "int64"
      home_second:
        type: "integer"
        format: "int64"
      home_third:
        type: "integer"
        format: "int64"
      home_fourth:
        type: "integer"
        format: "int64"
      home_open:
        type: "integer"
        format: "int64"
      home_close:
        type: "integer"
        format: "int64"
      home_ml:
        type: "integer"
        format: "int64"
      home_two_h:
        type: "integer"
        format: "int64"
      away_first:
        type: "integer"
        format: "int64"
      away_second:
        type: "integer"
        format: "int64"
      away_third:
        type: "integer"
        format: "int64"
      away_fourth:
        type: "integer"
        format: "int64"
      away_open:
        type: "integer"
        format: "int64"
      away_close:
        type: "integer"
        format: "int64"
      away_ml:
        type: "integer"
        format: "int64"
      away_two_h:
        type: "integer"
        format: "int64"
      home_won_last:
        type: "boolean"
      away_won_last:
        type: "boolean"
    example:
      home_third: 7
      home_close: 2
      away_third: 1
      home_team_id: 6
      away_open: 7
      home_team_won: true
      away_ml: 4
      away_first: 1
      away_close: 1
      away_won_last: true
      home_second: 2
      home_first: 5
      away_fourth: 6
      home_open: 3
      home_fourth: 9
      away_second: 1
      season: 5
      away_two_h: 5
      home_two_h: 7
      away_team_id: 1
      home_won_last: true
      game_date: "2000-01-23T04:56:07.000+00:00"
      home_ml: 4
      game_id: 0
  PlayerGameDetails:
    type: "object"
    properties:
      game_id:
        type: "integer"
        format: "int64"
      player_id:
        type: "integer"
        format: "int64"
      team_id:
        type: "integer"
        format: "int64"
      start_position:
        type: "string"
      did_not_play:
        type: "boolean"
      did_not_dress:
        type: "boolean"
      not_with_team:
        type: "boolean"
      seconds_played:
        type: "integer"
        format: "int64"
      field_goals_made:
        type: "integer"
        format: "int64"
      field_goals_attempted:
        type: "integer"
        format: "int64"
      three_pointers_made:
        type: "integer"
        format: "int64"
      three_pointers_attempted:
        type: "integer"
        format: "int64"
      free_throws_made:
        type: "integer"
        format: "int64"
      free_throws_attempted:
        type: "integer"
        format: "int64"
      offensive_rebounds:
        type: "integer"
        format: "int64"
      defensive_rebounds:
        type: "integer"
        format: "int64"
      assists:
        type: "integer"
        format: "int64"
      steals:
        type: "integer"
        format: "int64"
      blocked_shots:
        type: "integer"
        format: "int64"
      turnovers:
        type: "integer"
        format: "int64"
      personal_fouls:
        type: "integer"
        format: "int64"
      points:
        type: "integer"
        format: "int64"
      plus_minus:
        type: "integer"
        format: "int64"
      is_top_scorer:
        type: "boolean"
    example:
      start_position: "start_position"
      free_throws_made: 3
      field_goals_made: 5
      free_throws_attempted: 2
      personal_fouls: 7
      blocked_shots: 1
      team_id: 1
      steals: 1
      is_top_scorer: true
      three_pointers_attempted: 9
      points: 1
      plus_minus: 4
      player_id: 6
      three_pointers_made: 7
      assists: 1
      not_with_team: true
      field_goals_attempted: 2
      turnovers: 6
      did_not_dress: true
      seconds_played: 5
      offensive_rebounds: 4
      defensive_rebounds: 7
      did_not_play: true
      game_id: 0
  BettingBotInput:
    type: "object"
    properties:
      starting_money:
        type: "integer"
        format: "int64"
      starting_date:
        type: "string"
        format: "date-time"
      num_games:
        type: "integer"
        format: "int64"
  BettingBotOutput:
    type: "object"
    properties:
      games:
        type: "array"
        items:
          $ref: "#/definitions/Game"
      teams:
        type: "array"
        items:
          $ref: "#/definitions/Team"
      bet_on_games:
        type: "array"
        items:
          type: "boolean"
      ending_money:
        type: "integer"
        format: "int64"
    example:
      bet_on_games:
      - true
      - true
      teams:
      - owner: "owner"
        head_coach: "head_coach"
        manager: "manager"
        city: "city"
        arena_name: "arena_name"
        year_founded: 5
        team_id: 0
        abbreviation: "abbreviation"
        max_year_in_nba_champ: 1
        nickname: "nickname"
        min_year_in_nba_champ: 6
        arena_capacity: 5
        players_been_on_team: 2
      - owner: "owner"
        head_coach: "head_coach"
        manager: "manager"
        city: "city"
        arena_name: "arena_name"
        year_founded: 5
        team_id: 0
        abbreviation: "abbreviation"
        max_year_in_nba_champ: 1
        nickname: "nickname"
        min_year_in_nba_champ: 6
        arena_capacity: 5
        players_been_on_team: 2
      games:
      - home_third: 7
        home_close: 2
        away_third: 1
        home_team_id: 6
        away_open: 7
        home_team_won: true
        away_ml: 4
        away_first: 1
        away_close: 1
        away_won_last: true
        home_second: 2
        home_first: 5
        away_fourth: 6
        home_open: 3
        home_fourth: 9
        away_second: 1
        season: 5
        away_two_h: 5
        home_two_h: 7
        away_team_id: 1
        home_won_last: true
        game_date: "2000-01-23T04:56:07.000+00:00"
        home_ml: 4
        game_id: 0
      - home_third: 7
        home_close: 2
        away_third: 1
        home_team_id: 6
        away_open: 7
        home_team_won: true
        away_ml: 4
        away_first: 1
        away_close: 1
        away_won_last: true
        home_second: 2
        home_first: 5
        away_fourth: 6
        home_open: 3
        home_fourth: 9
        away_second: 1
        season: 5
        away_two_h: 5
        home_two_h: 7
        away_team_id: 1
        home_won_last: true
        game_date: "2000-01-23T04:56:07.000+00:00"
        home_ml: 4
        game_id: 0
      ending_money: 0
  ClusterInput:
    type: "object"
    properties:
      season:
        type: "integer"
        format: "int64"
      player_ids:
        type: "array"
        items:
          type: "integer"
  ClusterOutput:
    type: "object"
    properties:
      players_clustered:
        type: "array"
        items:
          $ref: "#/definitions/ClusterOutputItem"
      players:
        type: "array"
        items:
          $ref: "#/definitions/Player"
      missing_or_not_found:
        type: "array"
        items:
          type: "integer"
    example:
      missing_or_not_found:
      - 9
      - 9
      players:
      - college: "college"
        country: "country"
        draft_number: 3
        draft_year: 7
        weight: 5
        draft_round: 9
        player_auto_key: 0
        team_id: 2
        player_id: 6
        season: 5
        player_name: "player_name"
        season_range: 4
        age: 2
        height: 1
      - college: "college"
        country: "country"
        draft_number: 3
        draft_year: 7
        weight: 5
        draft_round: 9
        player_auto_key: 0
        team_id: 2
        player_id: 6
        season: 5
        player_name: "player_name"
        season_range: 4
        age: 2
        height: 1
      players_clustered:
      - player_id: 0
        average_assists: 1.46581298050294517310021547018550336360931396484375
        average_steals: 5.962133916683182377482808078639209270477294921875
        average_blocks: 5.63737665663332876420099637471139430999755859375
        defense_label: 7
        average_points: 6.02745618307040320615897144307382404804229736328125
        offense_label: 2
      - player_id: 0
        average_assists: 1.46581298050294517310021547018550336360931396484375
        average_steals: 5.962133916683182377482808078639209270477294921875
        average_blocks: 5.63737665663332876420099637471139430999755859375
        defense_label: 7
        average_points: 6.02745618307040320615897144307382404804229736328125
        offense_label: 2
  ClusterOutputItem:
    type: "object"
    properties:
      player_id:
        type: "integer"
        format: "int64"
      average_points:
        type: "number"
        format: "double"
      average_assists:
        type: "number"
        format: "double"
      average_steals:
        type: "number"
        format: "double"
      average_blocks:
        type: "number"
        format: "double"
      offense_label:
        type: "integer"
        format: "int64"
      defense_label:
        type: "integer"
        format: "int64"
    example:
      player_id: 0
      average_assists: 1.46581298050294517310021547018550336360931396484375
      average_steals: 5.962133916683182377482808078639209270477294921875
      average_blocks: 5.63737665663332876420099637471139430999755859375
      defense_label: 7
      average_points: 6.02745618307040320615897144307382404804229736328125
      offense_label: 2
  NullResult:
    type: "object"
    properties:
      row_count:
        type: "integer"
      columns:
        type: "array"
        items:
          type: "string"
      nulls_in_columns:
        type: "array"
        items:
          type: "integer"
      rows_with_any_nulls:
        type: "integer"
        format: "int64"
    example:
      columns:
      - "columns"
      - "columns"
      nulls_in_columns:
      - 6
      - 6
      rows_with_any_nulls: 1
      row_count: 0
  SeasonStatistics:
    type: "object"
    properties:
      games_played:
        type: "integer"
        format: "int64"
      avg_seconds_played:
        type: "number"
        format: "double"
      avg_field_goals_made:
        type: "number"
        format: "double"
      avg_field_goals_attempted:
        type: "number"
        format: "double"
      avg_three_pointers_made:
        type: "number"
        format: "double"
      avg_three_pointers_attempted:
        type: "number"
        format: "double"
      avg_free_throws_made:
        type: "number"
        format: "double"
      avg_free_throws_attempted:
        type: "number"
        format: "double"
      avg_offensive_rebounds:
        type: "number"
        format: "double"
      avg_defensive_rebounds:
        type: "number"
        format: "double"
      avg_assists:
        type: "number"
        format: "double"
      avg_steals:
        type: "number"
        format: "double"
      avg_blocked_shots:
        type: "number"
        format: "double"
      avg_turnovers:
        type: "number"
        format: "double"
      avg_personal_fouls:
        type: "number"
        format: "double"
      avg_points:
        type: "number"
        format: "double"
      avg_plus_minus:
        type: "number"
        format: "double"
    example:
      avg_three_pointers_made: 5.63737665663332876420099637471139430999755859375
      avg_blocked_shots: 1.231513536777255612975068288506008684635162353515625
      avg_personal_fouls: 1.489415909854170383397331534069962799549102783203125
      avg_assists: 4.1456080298839363962315474054776132106781005859375
      avg_points: 6.8468526983526398765889098285697400569915771484375
      avg_free_throws_attempted: 9.301444243932575517419536481611430644989013671875
      avg_steals: 7.3862819483858839220147274318151175975799560546875
      games_played: 0
      avg_three_pointers_attempted: 2.3021358869347654518833223846741020679473876953125
      avg_offensive_rebounds: 3.61607674925191080461672754609026014804840087890625
      avg_free_throws_made: 7.061401241503109105224211816675961017608642578125
      avg_defensive_rebounds: 2.027123023002321833274663731572218239307403564453125
      avg_field_goals_attempted: 5.962133916683182377482808078639209270477294921875
      avg_field_goals_made: 1.46581298050294517310021547018550336360931396484375
      avg_turnovers: 1.024645700144157789424070870154537260532379150390625
      avg_plus_minus: 7.4577447736837658709418974467553198337554931640625
      avg_seconds_played: 6.02745618307040320615897144307382404804229736328125
  NerualNetInput:
    type: "object"
    properties:
      date:
        type: "string"
        format: "date-time"
      tweet:
        type: "string"
  NerualNetOutput:
    type: "object"
    properties:
      game:
        $ref: "#/definitions/Game"
      features:
        $ref: "#/definitions/NeuralNetFeatures"
      chance_to_win:
        type: "number"
        format: "double"
      actual_team_won:
        type: "boolean"
    example:
      features:
        prev_game_points: 5
        year: 6
        prev_game_three_throw_perc: 7.061401241503109105224211816675961017608642578125
        team: 1
        prev_game_rebounds: 3
        did_tweet: 7
        prev_game_free_throw_perc: 2.3021358869347654518833223846741020679473876953125
        prev_game_assists: 9
        is_home_team: 2
        month: 0
        prev_game_field_goal_perc: 5.63737665663332876420099637471139430999755859375
        tweet_sentiment: 4
        won_last_game: 1
      game:
        home_third: 7
        home_close: 2
        away_third: 1
        home_team_id: 6
        away_open: 7
        home_team_won: true
        away_ml: 4
        away_first: 1
        away_close: 1
        away_won_last: true
        home_second: 2
        home_first: 5
        away_fourth: 6
        home_open: 3
        home_fourth: 9
        away_second: 1
        season: 5
        away_two_h: 5
        home_two_h: 7
        away_team_id: 1
        home_won_last: true
        game_date: "2000-01-23T04:56:07.000+00:00"
        home_ml: 4
        game_id: 0
      actual_team_won: true
      chance_to_win: 1.024645700144157789424070870154537260532379150390625
  NeuralNetFeatures:
    type: "object"
    properties:
      month:
        type: "integer"
        format: "int64"
      year:
        type: "integer"
        format: "int64"
      team:
        type: "integer"
        format: "int64"
      prev_game_points:
        type: "integer"
        format: "int64"
      prev_game_field_goal_perc:
        type: "number"
        format: "double"
      prev_game_free_throw_perc:
        type: "number"
        format: "double"
      prev_game_three_throw_perc:
        type: "number"
        format: "double"
      prev_game_assists:
        type: "integer"
        format: "int64"
      prev_game_rebounds:
        type: "integer"
        format: "int64"
      is_home_team:
        type: "integer"
        format: "int64"
      tweet_sentiment:
        type: "integer"
        format: "int64"
      did_tweet:
        type: "integer"
        format: "int64"
      won_last_game:
        type: "integer"
        format: "int64"
    example:
      prev_game_points: 5
      year: 6
      prev_game_three_throw_perc: 7.061401241503109105224211816675961017608642578125
      team: 1
      prev_game_rebounds: 3
      did_tweet: 7
      prev_game_free_throw_perc: 2.3021358869347654518833223846741020679473876953125
      prev_game_assists: 9
      is_home_team: 2
      month: 0
      prev_game_field_goal_perc: 5.63737665663332876420099637471139430999755859375
      tweet_sentiment: 4
      won_last_game: 1
  EnsembleInput:
    type: "object"
    properties:
      starting_money:
        type: "integer"
        format: "int64"
      starting_date:
        type: "string"
        format: "date-time"
      num_games:
        type: "integer"
        format: "int64"
      tweets:
        type: "array"
        items:
          type: "string"
  EnsembleOutput:
    type: "object"
    properties:
      games:
        type: "array"
        items:
          $ref: "#/definitions/Game"
      teams:
        type: "array"
        items:
          $ref: "#/definitions/Team"
      betting_bot_bet_on_games:
        type: "array"
        items:
          type: "boolean"
      neural_network_prob:
        type: "array"
        items:
          type: "number"
          format: "double"
    example:
      neural_network_prob:
      - 0.80082819046101150206595775671303272247314453125
      - 0.80082819046101150206595775671303272247314453125
      teams:
      - owner: "owner"
        head_coach: "head_coach"
        manager: "manager"
        city: "city"
        arena_name: "arena_name"
        year_founded: 5
        team_id: 0
        abbreviation: "abbreviation"
        max_year_in_nba_champ: 1
        nickname: "nickname"
        min_year_in_nba_champ: 6
        arena_capacity: 5
        players_been_on_team: 2
      - owner: "owner"
        head_coach: "head_coach"
        manager: "manager"
        city: "city"
        arena_name: "arena_name"
        year_founded: 5
        team_id: 0
        abbreviation: "abbreviation"
        max_year_in_nba_champ: 1
        nickname: "nickname"
        min_year_in_nba_champ: 6
        arena_capacity: 5
        players_been_on_team: 2
      games:
      - home_third: 7
        home_close: 2
        away_third: 1
        home_team_id: 6
        away_open: 7
        home_team_won: true
        away_ml: 4
        away_first: 1
        away_close: 1
        away_won_last: true
        home_second: 2
        home_first: 5
        away_fourth: 6
        home_open: 3
        home_fourth: 9
        away_second: 1
        season: 5
        away_two_h: 5
        home_two_h: 7
        away_team_id: 1
        home_won_last: true
        game_date: "2000-01-23T04:56:07.000+00:00"
        home_ml: 4
        game_id: 0
      - home_third: 7
        home_close: 2
        away_third: 1
        home_team_id: 6
        away_open: 7
        home_team_won: true
        away_ml: 4
        away_first: 1
        away_close: 1
        away_won_last: true
        home_second: 2
        home_first: 5
        away_fourth: 6
        home_open: 3
        home_fourth: 9
        away_second: 1
        season: 5
        away_two_h: 5
        home_two_h: 7
        away_team_id: 1
        home_won_last: true
        game_date: "2000-01-23T04:56:07.000+00:00"
        home_ml: 4
        game_id: 0
      betting_bot_bet_on_games:
      - true
      - true
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
